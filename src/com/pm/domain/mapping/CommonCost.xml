<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  


	<mapper namespace="CommonCostMapping">


	<resultMap type="java.util.Map" id="map" />
	<resultMap type="com.pm.domain.business.CommonCost" id="commoncostMap" />


	<select id="getCommonCost" parameterType="com.pm.domain.business.CommonCost" resultMap="commoncostMap">
		select cc.* , convert(use_month,char)   as str_month ,
		dd_pii.dic_data_name as pay_item_name , staff.staff_name , staff.staff_no
		from tb_common_cost cc
		join ts_dic_data dd_pii on cc.pay_item_id  = dd_pii.id
		left join tb_other_staff staff on cc.staff_id = staff.staff_id
		where cc.id = #{id}
	</select>

	<insert id="addCommonCost" parameterType="com.pm.domain.business.CommonCost" >
		insert into  tb_common_cost(
			id,staff_id,pay_item_id,use_month,pay_date,
			amount,description,import_order,build_datetime,build_username,
			build_userid,verify_username,verify_userid,verify_datetime
		)values  (
			#{id},#{staff_id},#{pay_item_id},#{use_month},#{pay_date},
			#{amount},#{description},#{import_order},#{build_datetime},#{build_username},
			#{build_userid},#{verify_username},#{verify_userid},#{verify_datetime}
		)
	</insert>

	<update id="updateCommonCost" parameterType="com.pm.domain.business.CommonCost" >
		update  tb_common_cost set 
		staff_id=#{staff_id},
		pay_item_id=#{pay_item_id},
		use_month=#{use_month},
		pay_date=#{pay_date},
		amount=#{amount},
		description=#{description}
		where id=#{id} 
		and verify_userid is null 
	</update>

	<update id="verifyCommonCost" parameterType="com.pm.domain.business.CommonCost" >
		update  tb_common_cost set 
		verify_userid = #{verify_userid}, 
		verify_username =  #{verify_username}, 
		verify_datetime = #{verify_datetime} 
		where id=#{id}

		and verify_userid is null
	</update>

	<update id="unVerifyCommonCost" parameterType="com.pm.domain.business.CommonCost" >
		update  tb_common_cost set 
		verify_userid = null, 
		verify_username = null, 
		verify_datetime = null
		where id=#{id}
	</update>

	<delete id="deleteCommonCost" parameterType="com.pm.domain.business.CommonCost" >
		delete from  tb_common_cost
		where id=#{id}
		and verify_userid is null
	</delete>

	<select id="queryCommonCostTotalAmount" parameterType="map"  resultType="double" >
		SELECT sum(amount) FROM (
			<include refid="commoncostPagerSql"/>
		) c
	</select>

	<select id="queryCommonCostByPager_mysql" parameterType="map"  resultMap="commoncostMap" >
		<include refid="commoncostPagerSql"/> LIMIT #{page.startRow},#{page.pageSize}
	</select>

	<select id="queryCommonCostByCount_mysql" parameterType="map"  resultType="int" >
		SELECT COUNT(*) FROM (<include refid="commoncostPagerSql"/> )c
	</select>

	<sql id="commoncostPagerSql">
		select cc.* , convert(use_month,char)   as str_month ,
		dd_pii.dic_data_name as pay_item_name , staff.staff_name , staff.staff_no,
		aa.need_approve
		from tb_common_cost cc
		join ts_dic_data dd_pii on cc.pay_item_id  = dd_pii.id
		left join tb_other_staff staff on cc.staff_id = staff.staff_id
		left join (SELECT need_approve,data_id FROM tb_apply_approve  where delete_flag='0' and need_approve='1' and data_type = 'COMMONCOST' group by data_id) aa
		on cc.id = aa.data_id
		WHERE 1=1


		<if test="CommonCost.pay_item_id != null and CommonCost.pay_item_id != ''">
			AND cc.pay_item_id = #{CommonCost.pay_item_id}
		</if>


		<if test="CommonCost.staff_name != null and CommonCost.staff_name != ''">
			AND  staff.staff_name like concat('%',TRIM(#{CommonCost.staff_name}),'%') 			
		</if>



		<if test="CommonCost.use_month1 != 0 ">
			<![CDATA[	
			AND cc.use_month >= #{CommonCost.use_month1}
			]]>
		</if>
		<if test="CommonCost.use_month2 != 0 ">
			<![CDATA[	
			AND cc.use_month <= #{CommonCost.use_month2}
			]]>
		</if>


		<if test="CommonCost.pay_date1 != null ">
			<![CDATA[	
			AND cc.pay_date >= #{CommonCost.pay_date1}
			]]>
		</if>
		<if test="CommonCost.pay_date2 != null ">
			<![CDATA[	
			AND cc.pay_date <= #{CommonCost.pay_date2}
			]]>
		</if>


		<if test="CommonCost.verify_flag != null and CommonCost.verify_flag != ''">
			<if test="CommonCost.verify_flag == 1">
				and cc.verify_userid is not null
			</if>
			<if test="CommonCost.verify_flag == 2">
				and cc.verify_userid is null
			</if>
			<if test="CommonCost.verify_flag == 3">
				and (cc.verify_userid is not null and aa.need_approve = '1')
			</if>
		</if>



		order by cc.use_month  desc,  cc.build_datetime desc, cc.import_order
	</sql>

</mapper>