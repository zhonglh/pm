<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="GrossProfitStatisticsMapping3">

	
	
	<resultMap type="java.util.Map" id="map" />
	
	<resultMap type="com.pm.domain.business.Statistics" id="statisticsMap" />


	<select id="queryByQuarterByPager_mysql" parameterType="map"   resultMap="statisticsMap">
		<include refid="queryQuarterPagerSql"/> LIMIT #{page.startRow},#{page.pageSize}
	</select>
	
	<select id="queryByQuarterByCount_mysql" parameterType="map"  resultType="int" >
		 SELECT COUNT(*) FROM (
			<include refid="queryQuarterPagerSql"/>
		) c
		
	</select>

	
	<sql id="queryQuarterPagerSql">		
	select  quarter, sum(amount) as statistics_amount, ROUND(sum(amount)/sum(total_amount)*100,2) as statistics_rate 
		from (
		select project.project_name,rp.*
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 
		inner join 			(
				select project_id,(statement_month-statement_month%100+(floor(statement_month%100/4)+1)) as quarter,
				sum(case when amount is NULL   	then 0 else amount*(1-${Statistics.tax_rate}) end) as amount ,
				sum(case when amount is NULL   	then 0 else amount end) as total_amount
				<![CDATA[
				from vb_received_payment_monthly where 1=1 
				]]>
				<if test="Statistics.month1 != 0">
				<![CDATA[	
					AND statement_month >= #{Statistics.month1} 
				]]>
				</if> 			
				<if test="Statistics.month2 != 0">
				<![CDATA[	
					AND statement_month <= #{Statistics.month2} 
				]]>
				</if>			
				group by project_id, (statement_month-statement_month%100+(floor(statement_month%100/4)+1))
		)rp 
		on project.project_id = rp.project_id 
		union all
		select project.project_name,psc.* 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 		
		inner join 	(
				select project_id, (work_month-work_month%100+(floor(work_month%100/4)+1)) as quarter,
				sum(case when all_amount is NULL  then 0 else all_amount end)*-1 as amount  ,
				0 as total_amount

				<![CDATA[
				from tb_project_staff_cost where 1=1 and  work_month >= 201501
				]]>
				<if test="Statistics.month1 != 0">
				<![CDATA[	
					AND work_month >= #{Statistics.month1} 
				]]>
				</if> 			
				<if test="Statistics.month2 != 0">
				<![CDATA[	
					AND work_month <= #{Statistics.month2} 
				]]>
				</if>						
				group by project_id,(work_month-work_month%100+(floor(work_month%100/4)+1))
		)psc 
		on project.project_id = psc.project_id 		
		union all
		select project.project_name,pe.* 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 		
		inner join 	(
				select project_id,  (pay_month-pay_month%100+(floor(pay_month%100/4)+1)) as quarter,
				sum(actual_cost)*-1 amount ,
				0 as total_amount
				<![CDATA[
				from vb_project_expend_pay where delete_flag = '0' and pay_month >= 201501
				and verify_userid is not NULL
				]]>
				<if test="Statistics.month1 != 0">
				<![CDATA[	
					AND pay_month >= #{Statistics.month1} 
				]]>
				</if> 			
				<if test="Statistics.month2 != 0">
				<![CDATA[	
					AND pay_month <= #{Statistics.month2} 
				]]>
				</if>			
				group by project_id,  (pay_month-pay_month%100+(floor(pay_month%100/4)+1)) 
		)pe 
		on project.project_id = pe.project_id 
		union all
		select project.project_name,rc.* 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 		
		inner join 	(
				select project_id,  (pay_month-pay_month%100+(floor(pay_month%100/4)+1)) as quarter,
				sum(case when amount is NULL  then 0 else amount end)*-1 as amount  ,
				0 as total_amount

				<![CDATA[
				from vb_reimburse_costs  where delete_flag = '0' and pay_month >= 201501
				and not EXISTS (select 1 from vb_begin_data2 vba where vb_reimburse_costs.reimburse_id = vba.reimburse_id)
				and verify_userid is not NULL
				]]>
				<if test="Statistics.month1 != 0">
				<![CDATA[	
					AND pay_month >= #{Statistics.month1}
				]]>
				</if> 			
				<if test="Statistics.month2 != 0">
				<![CDATA[	
					AND pay_month <= #{Statistics.month2}
				]]>
				</if>				
				group by project_id,  (pay_month-pay_month%100+(floor(pay_month%100/4)+1))
		)rc 
		on project.project_id = rc.project_id 
	) a group by quarter 
	order by quarter desc
	</sql>	
	
	
	<select id="queryByYearByPager_mysql" parameterType="map"   resultMap="statisticsMap">
		<include refid="queryYearPagerSql"/> LIMIT #{page.startRow},#{page.pageSize}
	</select>
	
	<select id="queryByYearByCount_mysql" parameterType="map"  resultType="int" >
		 SELECT COUNT(*) FROM (
			<include refid="queryYearPagerSql"/>
		) c
		
	</select>
	
	
	<sql id="queryYearPagerSql">		
	select  year1, sum(amount) as statistics_amount , ROUND(sum(amount)/sum(total_amount)*100,2) as statistics_rate 
		from (
		select project.project_name,rp.*
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 
		inner join 			(
				select project_id,floor(statement_month/100) year1,
				sum(case when amount is NULL   	then 0 else amount*(1-${Statistics.tax_rate}) end) as amount ,
				sum(case when amount is NULL   	then 0 else amount end) as total_amount

				<![CDATA[
				from vb_received_payment_monthly  	where 1=1 
				]]>

				<if test="Statistics.month1 != 0">
				<![CDATA[	
					AND statement_month >= #{Statistics.month1} 
				]]>
				</if> 			
				<if test="Statistics.month2 != 0">
				<![CDATA[	
					AND statement_month <= #{Statistics.month2} 
				]]>
				</if>			
				group by project_id, floor(statement_month/100)
		)rp 
		on project.project_id = rp.project_id 
		union all
		select project.project_name,psc.* 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 		
		inner join 	(
				select project_id, floor(work_month/100) year1,sum(case when all_amount is NULL  then 0 else all_amount end)*-1 as amount  ,
				0 as total_amount

				<![CDATA[
				from tb_project_staff_cost where 1=1  and  work_month >= 201501
				]]>
				<if test="Statistics.month1 != 0">
				<![CDATA[	
					AND work_month >= #{Statistics.month1} 
				]]>
				</if> 			
				<if test="Statistics.month2 != 0">
				<![CDATA[	
					AND work_month <= #{Statistics.month2} 
				]]>
				</if>						
				group by project_id, floor(work_month/100)
		)psc 
		on project.project_id = psc.project_id 		
		union all
		select project.project_name,pe.* 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 		
		inner join 	(
				select project_id, floor(pay_month/100) year1,sum(actual_cost)*-1 amount  ,
				0 as total_amount

				<![CDATA[
				from vb_project_expend_pay where delete_flag = '0' and pay_month >= 201501
				and verify_userid is not NULL
				]]>
				<if test="Statistics.month1 != 0">
				<![CDATA[	
					AND pay_month >= #{Statistics.month1} 
				]]>
				</if> 			
				<if test="Statistics.month2 != 0">
				<![CDATA[	
					AND pay_month <= #{Statistics.month2} 
				]]>
				</if>			
				group by project_id, floor(pay_month/100)
		)pe 
		on project.project_id = pe.project_id 
		union all 
		select project.project_name,rc.* 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 		
		inner join 	(
				select project_id, floor(pay_month/100) year1,sum(case when amount is NULL  then 0 else amount end)*-1 as amount  ,
				0 as total_amount

				<![CDATA[
				from vb_reimburse_costs  where delete_flag = '0' and pay_month >= 201501
				and not EXISTS (select 1 from vb_begin_data2 vba where vb_reimburse_costs.reimburse_id = vba.reimburse_id)
				and verify_userid is not NULL
				]]>

				<if test="Statistics.month1 != 0">
				<![CDATA[	
					AND pay_month >= #{Statistics.month1}
				]]>
				</if> 			
				<if test="Statistics.month2 != 0">
				<![CDATA[	
					AND pay_month <= #{Statistics.month2}
				]]>
				</if>				
				group by project_id, floor(pay_month/100)
		)rc 
		on project.project_id = rc.project_id 
	) a group by year1 
	order by year1 desc
	</sql>

		
	
	
	<select id="queryByAllByPager_mysql" parameterType="map"   resultMap="statisticsMap">
		<include refid="queryAllPagerSql"/> LIMIT #{page.startRow},#{page.pageSize}
	</select>
	
	<select id="queryByAllByCount_mysql" parameterType="map"  resultType="int" >
		 SELECT COUNT(*) FROM (
			<include refid="queryAllPagerSql"/>
		) c
		
	</select>


	<sql id="queryAllPagerSql">		
		select sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)as statistics_amount,
		ROUND(sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)/sum(case when total_amount is NULL  then 0 else total_amount end)*100,2) as  statistics_rate 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 
		left join (
			select project_id, 
			sum(case when amount is NULL  then 0 else amount*(1-${Statistics.tax_rate}) end) amount ,
			sum(case when amount is NULL  then 0 else amount end) as total_amount

			<![CDATA[
			from vb_received_payment_monthly  		 where 1=1 
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND statement_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND statement_month <= #{Statistics.month2} 
			]]>
			</if>			
			group by project_id
		) rp
		on project.project_id = rp.project_id
		left join (
			select project_id, sum(case when all_amount is NULL  then 0 else all_amount end) amount 
			from tb_project_staff_cost where 1=1  and  work_month >= 201501
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND work_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND work_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		) psc
		on project.project_id = psc.project_id 
		left join (
			select project_id, sum(case when amount is NULL  then 0 else amount end) amount
			<![CDATA[
			from vb_reimburse_costs where  delete_flag = '0' and pay_month >= 201501
			and not EXISTS (select 1 from vb_begin_data2 vba where vb_reimburse_costs.reimburse_id = vba.reimburse_id)
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1}
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2}
			]]>
			</if>					
			group by project_id
		)  rc 
		on project.project_id = rc.project_id 
		left join (
			select project_id, sum(actual_cost) amount
			<![CDATA[
			from vb_project_expend_pay where  delete_flag = '0' and pay_month >= 201501
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		)  pe
		on project.project_id = pe.project_id 
		
	
	</sql>		
	
	
	
	<select id="queryByDeptByPager_mysql" parameterType="map"   resultMap="statisticsMap">
		<include refid="queryByDeptPagerSql"/> LIMIT #{page.startRow},#{page.pageSize}
	</select>
	
	<select id="queryByDeptByCount_mysql" parameterType="map"  resultType="int" >
		 SELECT COUNT(*) FROM (
			<include refid="queryByDeptPagerSql"/>
		) c
		
	</select>
	
	<sql id="queryByDeptPagerSql">
	select * from (
		select project.deptid,project.deptname ,
		sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)as statistics_amount,
		ROUND(sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)/sum(case when total_amount is NULL  then 0 else total_amount end)*100,2) as  statistics_rate 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 
		left join (
			select project_id, 
			sum(case when amount is NULL  then 0 else amount*(1-${Statistics.tax_rate}) end) amount ,
			sum(case when amount is NULL  then 0 else amount end) as total_amount

			<![CDATA[
			from vb_received_payment_monthly  		 where 1=1 
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND statement_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND statement_month <= #{Statistics.month2} 
			]]>
			</if>			
			group by project_id
		) rp
		on project.project_id = rp.project_id
		left join (
			select project_id, sum(case when all_amount is NULL  then 0 else all_amount end) amount

			<![CDATA[
			from tb_project_staff_cost where 1=1 and  work_month >= 201501
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND work_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND work_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		) psc
		on project.project_id = psc.project_id 
		left join (
			select project_id, sum(case when amount is NULL  then 0 else amount end) amount

			<![CDATA[
			from vb_reimburse_costs where  delete_flag = '0' and pay_month >= 201501
			and not EXISTS (select 1 from vb_begin_data2 vba where vb_reimburse_costs.reimburse_id = vba.reimburse_id)
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1}
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2}
			]]>
			</if>					
			group by project_id
		)  rc 
		on project.project_id = rc.project_id 
		left join (
			select project_id, sum(actual_cost) amount
			<![CDATA[
			from vb_project_expend_pay where  delete_flag = '0' and pay_month >= 201501
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		)  pe
		on project.project_id = pe.project_id
		group by project.deptid,project.deptname
	) ddd where statistics_amount != 0
	order by statistics_amount desc
	
	</sql>			
	
	
	
	
	<select id="queryByExecDeptByPager_mysql" parameterType="map"   resultMap="statisticsMap">
		<include refid="queryByExecDeptPagerSql"/> LIMIT #{page.startRow},#{page.pageSize}
	</select>
	
	<select id="queryByExecDeptByCount_mysql" parameterType="map"  resultType="int" >
		 SELECT COUNT(*) FROM (
			<include refid="queryByExecDeptPagerSql"/>
		) c
		
	</select>
	

	<sql id="queryByExecDeptPagerSql">
	select * from (
		select project.exec_amount_deptid,project.exec_amount_deptname ,
		sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)as statistics_amount,
		ROUND(sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)/sum(case when total_amount is NULL  then 0 else total_amount end)*100,2) as  statistics_rate 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 
		left join (
			select project_id, 
			sum(case when amount is NULL  then 0 else amount*(1-${Statistics.tax_rate}) end) amount ,
			sum(case when amount is NULL  then 0 else amount end) as total_amount

			<![CDATA[
			from vb_received_payment_monthly  	where 1=1 
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND statement_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND statement_month <= #{Statistics.month2} 
			]]>
			</if>			
			group by project_id
		) rp
		on project.project_id = rp.project_id
		left join (
			select project_id, sum(case when all_amount is NULL  then 0 else all_amount end) amount

			<![CDATA[
			from tb_project_staff_cost where 1=1 and  work_month >= 201501
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND work_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND work_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		) psc
		on project.project_id = psc.project_id 
		left join (
			select project_id, sum(case when amount is NULL  then 0 else amount end) amount

			<![CDATA[
			from vb_reimburse_costs where  delete_flag = '0' and pay_month >= 201501
			and not EXISTS (select 1 from vb_begin_data2 vba where vb_reimburse_costs.reimburse_id = vba.reimburse_id)
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1}
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2}
			]]>
			</if>					
			group by project_id
		)  rc 
		on project.project_id = rc.project_id 
		left join (
			select project_id, sum(actual_cost) amount
			<![CDATA[
			from vb_project_expend_pay where  delete_flag = '0' and pay_month >= 201501
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		)  pe
		on project.project_id = pe.project_id 
		group by project.exec_amount_deptid,project.exec_amount_deptname
	) ddd where statistics_amount != 0
	order by statistics_amount desc
	
	</sql>			
	
	
	
	<select id="queryBySalesDeptByPager_mysql" parameterType="map"   resultMap="statisticsMap">
		<include refid="queryBySalesDeptPagerSql"/> LIMIT #{page.startRow},#{page.pageSize}
	</select>
	
	<select id="queryBySalesDeptByCount_mysql" parameterType="map"  resultType="int" >
		 SELECT COUNT(*) FROM (
			<include refid="queryBySalesDeptPagerSql"/>
		) c
		
	</select>
	
	
	<sql id="queryBySalesDeptPagerSql">
	select * from (
		select project.sales_amount_deptid,project.sales_amount_deptname ,
		sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)as statistics_amount,
		ROUND(sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)/sum(case when total_amount is NULL  then 0 else total_amount end)*100,2) as  statistics_rate 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 
		left join (
			select project_id, 
			sum(case when amount is NULL  then 0 else amount*(1-${Statistics.tax_rate}) end) amount ,
			sum(case when amount is NULL  then 0 else amount end) as total_amount
			<![CDATA[
			from vb_received_payment_monthly  	 where 1=1 
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND statement_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND statement_month <= #{Statistics.month2} 
			]]>
			</if>			
			group by project_id
		) rp
		on project.project_id = rp.project_id
		left join (
			select project_id, sum(case when all_amount is NULL  then 0 else all_amount end) amount

			<![CDATA[
			from tb_project_staff_cost where 1=1  and  work_month >= 201501
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND work_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND work_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		) psc
		on project.project_id = psc.project_id 
		left join (
			select project_id, sum(case when amount is NULL  then 0 else amount end) amount

			<![CDATA[
			from vb_reimburse_costs where  delete_flag = '0' and pay_month >= 201501
			and not EXISTS (select 1 from vb_begin_data2 vba where vb_reimburse_costs.reimburse_id = vba.reimburse_id)
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1}
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2}
			]]>
			</if>					
			group by project_id
		)  rc 
		on project.project_id = rc.project_id 
		left join (
			select project_id, sum(actual_cost) amount

			<![CDATA[
			from vb_project_expend_pay where  delete_flag = '0' and pay_month >= 201501
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		)  pe
		on project.project_id = pe.project_id
		group by project.sales_amount_deptid,project.sales_amount_deptname
	) ddd where statistics_amount != 0
	order by statistics_amount desc
	
	</sql>		
	
	
	<select id="queryByClientByPager_mysql" parameterType="map"   resultMap="statisticsMap">
		<include refid="queryByClientPagerSql"/> LIMIT #{page.startRow},#{page.pageSize}
	</select>
	
	<select id="queryByClientByCount_mysql" parameterType="map"  resultType="int" >
		 SELECT COUNT(*) FROM (
			<include refid="queryByClientPagerSql"/>
		) c
		
	</select>
	

	<sql id="queryByClientPagerSql">
	select * from (
		select project.project_client_id,	project.project_client_name,
		sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)as statistics_amount,
		ROUND(sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)/sum(case when total_amount is NULL  then 0 else total_amount end)*100,2) as  statistics_rate 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 
		left join (
			select project_id, 
			sum(case when amount is NULL  then 0 else amount*(1-${Statistics.tax_rate}) end) amount ,
			sum(case when amount is NULL  then 0 else amount end) as total_amount
			<![CDATA[
			from vb_received_payment_monthly  		where 1=1 
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND statement_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND statement_month <= #{Statistics.month2} 
			]]>
			</if>			
			group by project_id
		) rp
		on project.project_id = rp.project_id
		left join (
			select project_id, sum(case when all_amount is NULL  then 0 else all_amount end) amount
			<![CDATA[
			from tb_project_staff_cost where 1=1 and  work_month >= 201501
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND work_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND work_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		) psc
		on project.project_id = psc.project_id 
		left join (
			select project_id, sum(case when amount is NULL  then 0 else amount end) amount
			<![CDATA[
			from vb_reimburse_costs where  delete_flag = '0' and pay_month >= 201501
			and not EXISTS (select 1 from vb_begin_data2 vba where vb_reimburse_costs.reimburse_id = vba.reimburse_id)
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1}
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2}
			]]>
			</if>					
			group by project_id
		)  rc 
		on project.project_id = rc.project_id 
		left join (
			select project_id, sum(actual_cost) amount
			<![CDATA[
			from vb_project_expend_pay where  delete_flag = '0' and pay_month >= 201501
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		)  pe
		on project.project_id = pe.project_id 
		
		group by project.project_client_id,	project.project_client_name
	) ddd where statistics_amount != 0
	order by statistics_amount desc
	
	</sql>		
	
	
	
	<select id="queryByInfoSourceByPager_mysql" parameterType="map"   resultMap="statisticsMap">
		<include refid="queryByInfoSourcePagerSql"/> LIMIT #{page.startRow},#{page.pageSize}
	</select>
	
	<select id="queryByInfoSourceByCount_mysql" parameterType="map"  resultType="int" >
		 SELECT COUNT(*) FROM (
			<include refid="queryByInfoSourcePagerSql"/>
		) c
		
	</select>
	
	
	<sql id="queryByInfoSourcePagerSql">
	select * from (
		select project.info_sources_userid,	project.info_sources_username,
		sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)as statistics_amount,
		ROUND(sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)/sum(case when total_amount is NULL  then 0 else total_amount end)*100,2) as  statistics_rate 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 
		left join (
			select project_id, 
			sum(case when amount is NULL  then 0 else amount*(1-${Statistics.tax_rate}) end) amount ,
			sum(case when amount is NULL  then 0 else amount end) as total_amount
			<![CDATA[
			from vb_received_payment_monthly  		 where 1=1 
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND statement_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND statement_month <= #{Statistics.month2} 
			]]>
			</if>			
			group by project_id
		) rp
		on project.project_id = rp.project_id
		left join (
			select project_id, sum(case when all_amount is NULL  then 0 else all_amount end) amount
			<![CDATA[
			from tb_project_staff_cost where 1=1  and  work_month >= 201501
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND work_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND work_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		) psc
		on project.project_id = psc.project_id 
		left join (
			select project_id, sum(case when amount is NULL  then 0 else amount end) amount
			<![CDATA[
			from vb_reimburse_costs where  delete_flag = '0' and pay_month >= 201501
			and not EXISTS (select 1 from vb_begin_data2 vba where vb_reimburse_costs.reimburse_id = vba.reimburse_id)
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1}
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2}
			]]>
			</if>					
			group by project_id
		)  rc 
		on project.project_id = rc.project_id 
		left join (
			select project_id, sum(actual_cost) amount
			<![CDATA[
			from vb_project_expend_pay where  delete_flag = '0' and pay_month >= 201501
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		)  pe
		on project.project_id = pe.project_id 
		
		group by project.info_sources_userid,	project.info_sources_username
	) ddd where statistics_amount != 0
	order by statistics_amount desc
	
	</sql>		
	
	
	<select id="queryByManagerByPager_mysql" parameterType="map"   resultMap="statisticsMap">
		<include refid="queryByManagerPagerSql"/> LIMIT #{page.startRow},#{page.pageSize}
	</select>
	
	<select id="queryByManagerByCount_mysql" parameterType="map"  resultType="int" >
		 SELECT COUNT(*) FROM (
			<include refid="queryByManagerPagerSql"/>
		) c
		
	</select>
	


	<sql id="queryByManagerPagerSql">
	select * from (
		select  project.manage_userid,		project.manage_username,
		sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)as statistics_amount,
		ROUND(sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)/sum(case when total_amount is NULL  then 0 else total_amount end)*100,2) as  statistics_rate 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 
		left join (
			select project_id, 
			sum(case when amount is NULL  then 0 else amount*(1-${Statistics.tax_rate}) end) amount ,
			sum(case when amount is NULL  then 0 else amount end) as total_amount
			<![CDATA[
			from vb_received_payment_monthly  		where 1=1 
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND statement_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND statement_month <= #{Statistics.month2} 
			]]>
			</if>			
			group by project_id
		) rp
		on project.project_id = rp.project_id
		left join (
			select project_id, sum(case when all_amount is NULL  then 0 else all_amount end) amount
			<![CDATA[
			from tb_project_staff_cost where 1=1 and  work_month >= 201501
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND work_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND work_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		) psc
		on project.project_id = psc.project_id 
		left join (
			select project_id, sum(case when amount is NULL  then 0 else amount end) amount
			<![CDATA[
			from vb_reimburse_costs where  delete_flag = '0' and pay_month >= 201501
			and not EXISTS (select 1 from vb_begin_data2 vba where vb_reimburse_costs.reimburse_id = vba.reimburse_id)
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1}
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2}
			]]>
			</if>					
			group by project_id
		)  rc 
		on project.project_id = rc.project_id 
		left join (
			select project_id, sum(actual_cost) amount
			<![CDATA[
			from vb_project_expend_pay where  delete_flag = '0' and pay_month >= 201501
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		)  pe
		on project.project_id = pe.project_id
		group by project.manage_userid, project.manage_username
	) ddd where statistics_amount != 0
	order by statistics_amount desc
	
	</sql>		
	
		

	
	<select id="queryBySalesByPager_mysql" parameterType="map"   resultMap="statisticsMap">
		<include refid="queryBySalesPagerSql"/> LIMIT #{page.startRow},#{page.pageSize}
	</select>
	
	<select id="queryBySalesByCount_mysql" parameterType="map"  resultType="int" >
		 SELECT COUNT(*) FROM (
			<include refid="queryBySalesPagerSql"/>
		) c
		
	</select>
	


	<sql id="queryBySalesPagerSql">
	select * from (
		select 		project.sales_userid,		project.sales_username,
		sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)as statistics_amount,
		ROUND(sum(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)/sum(case when total_amount is NULL  then 0 else total_amount end)*100,2) as  statistics_rate 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 
		left join (
			select project_id, 
			sum(case when amount is NULL  then 0 else amount*(1-${Statistics.tax_rate}) end) amount ,
			sum(case when amount is NULL  then 0 else amount end) as total_amount
			<![CDATA[
			from vb_received_payment_monthly  	where 1=1 
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND statement_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND statement_month <= #{Statistics.month2} 
			]]>
			</if>			
			group by project_id
		) rp
		on project.project_id = rp.project_id
		left join (
			select project_id, sum(case when all_amount is NULL  then 0 else all_amount end) amount
			<![CDATA[
			from tb_project_staff_cost where 1=1 and  work_month >= 201501
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND work_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND work_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		) psc
		on project.project_id = psc.project_id 
		left join (
			select project_id, sum(case when amount is NULL  then 0 else amount end) amount
			<![CDATA[
			from vb_reimburse_costs where  delete_flag = '0' and pay_month >= 201501
			and not EXISTS (select 1 from vb_begin_data2 vba where vb_reimburse_costs.reimburse_id = vba.reimburse_id)
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1}
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2}
			]]>
			</if>					
			group by project_id
		)  rc 
		on project.project_id = rc.project_id 
		left join (
			select project_id, sum(actual_cost) amount
			<![CDATA[
			from vb_project_expend_pay where  delete_flag = '0' and pay_month >= 201501
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		)  pe
		on project.project_id = pe.project_id
		group by project.sales_userid,project.sales_username
	) ddd where statistics_amount != 0
	order by statistics_amount desc
	
	</sql>		
	
	
	
		
	<select id="queryByProjectByPager_mysql" parameterType="map"   resultMap="statisticsMap">
		<include refid="queryByProjectPagerSql"/> LIMIT #{page.startRow},#{page.pageSize}
	</select>
	
	<select id="queryByProjectByCount_mysql" parameterType="map"  resultType="int" >
		 SELECT COUNT(*) FROM (
			<include refid="queryByProjectPagerSql"/>
		) c
		
	</select>	
	
   
   
	<sql id="queryByProjectPagerSql">
	select * from (
		select project.project_id, 
		project.project_name,
		project.project_no,
		project.sales_username,
		project.manage_username,
		project.info_sources_username,
		project.sales_amount_deptname,
		project.exec_amount_deptname, 
		project.deptname ,
		(
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)as statistics_amount,
		ROUND((
		(case when rp.amount is NULL  then 0 else rp.amount end)
		-(case when psc.amount is NULL  then 0 else psc.amount end)
		-(case when rc.amount is NULL  then 0 else rc.amount end)
		-(case when pe.amount is NULL  then 0 else pe.amount end)
		)/(case when total_amount is NULL  then 0 else total_amount end)*100,2) as  statistics_rate 
		from (<include refid="StatisticsCommonMapping.projectSQL"/>) project 
		left join (
			select project_id, 
			sum(case when amount is NULL  then 0 else amount*(1-${Statistics.tax_rate}) end) amount ,
			sum(case when amount is NULL  then 0 else amount end) as total_amount

			<![CDATA[
			from vb_received_payment_monthly  		where 1=1 
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND statement_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND statement_month <= #{Statistics.month2} 
			]]>
			</if>			
			group by project_id
		) rp
		on project.project_id = rp.project_id
		left join (
			select project_id, sum(case when all_amount is NULL  then 0 else all_amount end) amount

			<![CDATA[
			from tb_project_staff_cost where 1=1 and  work_month >= 201501
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND work_month >= #{Statistics.month1} 
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND work_month <= #{Statistics.month2} 
			]]>
			</if>				
			group by project_id
		) psc
		on project.project_id = psc.project_id 
		left join (
			select project_id, sum(case when amount is NULL  then 0 else amount end) amount

			<![CDATA[
			from vb_reimburse_costs where  delete_flag = '0' and pay_month >= 201501
			and not EXISTS (select 1 from vb_begin_data2 vba where vb_reimburse_costs.reimburse_id = vba.reimburse_id)
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1}
			]]>
			</if> 			
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2}
			]]>
			</if>					
			group by project_id
		)  rc 
		on project.project_id = rc.project_id 
		left join (
			select project_id, sum(actual_cost) amount
			<![CDATA[
			from vb_project_expend_pay where  delete_flag = '0' and pay_month >= 201501
			and verify_userid is not NULL
			]]>
			<if test="Statistics.month1 != 0">
			<![CDATA[	
				AND pay_month >= #{Statistics.month1} 
			]]>
			</if>
			<if test="Statistics.month2 != 0">
			<![CDATA[	
				AND pay_month <= #{Statistics.month2} 
			]]>
			</if>
			group by project_id
		)  pe
		on project.project_id = pe.project_id

		) ddd where statistics_amount != 0
		order by statistics_amount desc
	
	</sql>	
	
	
	
	 

</mapper>