<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">  


	<mapper namespace="ProjectExpendPayMapping">


	<resultMap type="java.util.Map" id="map" />
	<resultMap type="com.pm.domain.business.ProjectExpendPay" id="projectExpendpayMap" />


	<select id="getProjectExpendPay" parameterType="com.pm.domain.business.ProjectExpendPay" resultMap="projectExpendpayMap">
		 select pep.* , pe.amount , pe.pay_amount as pay_amount_total ,
		pe.project_id , project.project_name , project.project_no,pe.use_month , pe.sub_contractor_name
		from tb_project_expend_pay pep
		INNER JOIN tb_project_expend pe
		on pep.project_expend_id = pe.project_expend_id
		inner join tb_project project
		on pe.project_id = project.project_id
		where pep.id = #{id}
	</select>

	<insert id="addProjectExpendPay" parameterType="com.pm.domain.business.ProjectExpendPay" >
		insert into  tb_project_expend_pay(
			id,project_expend_id,invoiceno,pay_date,pay_amount,description,
			build_datetime,build_username,build_userid
		)values  (
			#{id},#{project_expend_id},#{invoiceno},#{pay_date},#{pay_amount},#{description},
			#{build_datetime},#{build_username},#{build_userid}
		)
	</insert>

	<update id="updateProjectExpendPay" parameterType="com.pm.domain.business.ProjectExpendPay" >
		update  tb_project_expend_pay set
		invoiceno=#{invoiceno},
		pay_date=#{pay_date},
		pay_amount=#{pay_amount},
		description=#{description}
		where id=#{id} 
		and verify_userid is null 
	</update>

	<update id="verifyProjectExpendPay" parameterType="com.pm.domain.business.ProjectExpendPay" >
		update  tb_project_expend_pay set 
		verify_userid = #{verify_userid}, 
		verify_username =  #{verify_username}, 
		verify_datetime = #{verify_datetime} 
		where id=#{id}
		and verify_userid is null
	</update>

	<update id="unVerifyProjectExpendPay" parameterType="com.pm.domain.business.ProjectExpendPay" >
		update  tb_project_expend_pay set 
		verify_userid = null, 
		verify_username = null, 
		verify_datetime = null
		where id=#{id}
	</update>

	<delete id="deleteProjectExpendPay" parameterType="com.pm.domain.business.ProjectExpendPay" >
		delete from  tb_project_expend_pay
		where id=#{id}
		and verify_userid is null
	</delete>

	<select id="queryProjectExpendPayTotalAmount" parameterType="map"  resultType="double" >
		SELECT sum(pay_amount) FROM (
			<include refid="projectExpendpayPagerSql"/>
		) c
	</select>

	<select id="queryProjectExpendPayByPager_mysql" parameterType="map"  resultMap="projectExpendpayMap" >
		<include refid="projectExpendpayPagerSql"/> LIMIT #{page.startRow},#{page.pageSize}
	</select>

	<select id="queryProjectExpendPayByCount_mysql" parameterType="map"  resultType="int" >
		SELECT COUNT(*) FROM (<include refid="projectExpendpayPagerSql"/> )c
	</select>

	<sql id="projectExpendpayPagerSql">
		 select pep.* , pe.amount , pe.pay_amount as pay_amount_total ,pe.project_id ,
		project.project_name , project.project_no,pe.use_month , pe.sub_contractor_name , aa.need_approve
		from tb_project_expend_pay pep
		INNER JOIN tb_project_expend pe
		on pep.project_expend_id = pe.project_expend_id
		inner join tb_project project
		on pe.project_id = project.project_id
		left join (SELECT need_approve,data_id FROM tb_apply_approve  where delete_flag='0' and need_approve='1' and data_type = 'PROJECT_EXPEND_PAY' group by data_id) aa
		on pe.project_expend_id = aa.data_id
		where pep.project_expend_id = #{ProjectExpendPay.project_expend_id}
	</sql>

</mapper>